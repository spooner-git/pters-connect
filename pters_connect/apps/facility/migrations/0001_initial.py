# Generated by Django 3.0 on 2020-08-26 21:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('member', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='FunctionAuthTb',
            fields=[
                ('reg_dt', models.DateTimeField(auto_now_add=True, db_column='REG_DT', null=True, verbose_name='최초등록 시각')),
                ('mod_dt', models.DateTimeField(auto_now=True, db_column='MOD_DT', null=True, verbose_name='최종수정 시각')),
                ('use', models.IntegerField(db_column='USE', default=1, verbose_name='사용')),
                ('function_auth_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('function_auth_type_cd', models.CharField(blank=True, db_column='FUNCTION_AUTH_TYPE_CD', max_length=45, verbose_name='기능권한 타입')),
                ('function_auth_type_name', models.CharField(blank=True, db_column='FUNCTION_AUTH_TYPE_NAME', max_length=255, verbose_name='기능 권한명')),
                ('order', models.IntegerField(db_column='ORDER', default=1)),
            ],
            options={
                'verbose_name': '기능 권한',
                'verbose_name_plural': '기능 권한',
                'db_table': 'FUNCTION_AUTH_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacilityTb',
            fields=[
                ('reg_dt', models.DateTimeField(auto_now_add=True, db_column='REG_DT', null=True, verbose_name='최초등록 시각')),
                ('mod_dt', models.DateTimeField(auto_now=True, db_column='MOD_DT', null=True, verbose_name='최종수정 시각')),
                ('use', models.IntegerField(db_column='USE', default=1, verbose_name='사용')),
                ('facility_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='NAME', default='', max_length=20, verbose_name='지점명')),
                ('main_type_cd', models.CharField(blank=True, choices=[('GOLF', '골프'), ('PI', '필라테스'), ('WT', '웨이트 트레이닝'), ('BL', '발레'), ('YG', '요가')], db_column='MAIN_TYPE_CD', default='', max_length=20, verbose_name='대분류')),
                ('sub_type_cd', models.CharField(blank=True, choices=[('INDOOR_FIELD', '실내 연습장'), ('OUTDOOR_FIELD', '실외 연습장'), ('SCREEN', '스크린 골프'), ('STUDIO', '전문 스튜디오')], db_column='SUB_TYPE_CD', default='', max_length=20, verbose_name='소분류')),
                ('support_tag', models.CharField(blank=True, db_column='SUPPORT_TAG', default='', max_length=3000, verbose_name='지원 태그')),
                ('title', models.CharField(blank=True, db_column='TITLE', default='', max_length=1000, verbose_name='타이틀')),
                ('contents', models.CharField(blank=True, db_column='CONTENTS', default='', max_length=3000, verbose_name='소개')),
                ('address', models.CharField(blank=True, db_column='ADDRESS', default='', max_length=255, verbose_name='주소')),
                ('main_img_url', models.URLField(blank=True, db_column='MAIN_IMG_URL', max_length=255, verbose_name='메인 이미지 URL')),
                ('sub_img_url', models.URLField(blank=True, db_column='SUB_IMG_URL', max_length=255, verbose_name='서브 이미지 URL')),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True, verbose_name='시작일')),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True, verbose_name='종료일')),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', default='', max_length=10, verbose_name='상태')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.MemberTb', verbose_name='회원')),
            ],
            options={
                'verbose_name': '지점',
                'verbose_name_plural': '지점',
                'db_table': 'FACILITY_TB',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubjectTb',
            fields=[
                ('reg_dt', models.DateTimeField(auto_now_add=True, db_column='REG_DT', null=True, verbose_name='최초등록 시각')),
                ('mod_dt', models.DateTimeField(auto_now=True, db_column='MOD_DT', null=True, verbose_name='최종수정 시각')),
                ('use', models.IntegerField(db_column='USE', default=1, verbose_name='사용')),
                ('subject_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='NAME', default='', max_length=255, verbose_name='수업명')),
                ('note', models.CharField(blank=True, db_column='NOTE', default='', max_length=1000, verbose_name='설명')),
                ('facility_tb', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='facility.FacilityTb', verbose_name='지점')),
                ('main_trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='MAIN_TRAINER_ID', to='member.MemberTb', verbose_name='메인 담당 강사')),
            ],
            options={
                'verbose_name': '수업',
                'verbose_name_plural': '수업',
                'db_table': 'SUBJECT_TB',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MemberFacilityTb',
            fields=[
                ('reg_dt', models.DateTimeField(auto_now_add=True, db_column='REG_DT', null=True, verbose_name='최초등록 시각')),
                ('mod_dt', models.DateTimeField(auto_now=True, db_column='MOD_DT', null=True, verbose_name='최종수정 시각')),
                ('use', models.IntegerField(db_column='USE', default=1, verbose_name='사용')),
                ('member_facility_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('auth_cd', models.CharField(blank=True, db_column='AUTH_CD', default='', max_length=20, verbose_name='권한 코드')),
                ('own_cd', models.CharField(blank=True, db_column='OWN_CD', default='OWNER', max_length=20, verbose_name='소유 코드')),
                ('mod_member_id', models.CharField(blank=True, db_column='MOD_MEMBER_ID', default='', max_length=20, verbose_name='최종수정 회원 ID')),
                ('facility_tb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='facility.FacilityTb', verbose_name='지점')),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='member.MemberTb', verbose_name='회원')),
            ],
            options={
                'verbose_name': '강사->지점 연결 정보',
                'verbose_name_plural': '강사->지점 연결 정보',
                'db_table': 'MEMBER_FACILITY_TB',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FacilityAuthTb',
            fields=[
                ('reg_dt', models.DateTimeField(auto_now_add=True, db_column='REG_DT', null=True, verbose_name='최초등록 시각')),
                ('mod_dt', models.DateTimeField(auto_now=True, db_column='MOD_DT', null=True, verbose_name='최종수정 시각')),
                ('use', models.IntegerField(db_column='USE', default=1, verbose_name='사용')),
                ('product_function_auth_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('auth_type_cd', models.CharField(blank=True, db_column='AUTH_TYPE_CD', default='', max_length=45, verbose_name='권한')),
                ('enable_flag', models.IntegerField(db_column='ENABLE_FLAG', default=1, verbose_name='가능 유무')),
                ('facility_tb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='facility.FacilityTb', verbose_name='지점')),
                ('function_auth_tb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='facility.FunctionAuthTb', verbose_name='기능')),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='member.MemberTb', verbose_name='회원')),
            ],
            options={
                'verbose_name': '공유 지점 권한',
                'verbose_name_plural': '공유 지점 권한',
                'db_table': 'FACILITY_AUTH_TB',
                'managed': True,
            },
        ),
    ]
